# Generated by Django 5.2.1 on 2025-05-27 06:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=500)),
                ("guide_comments", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SYNOPSIS_SUBMITTED", "Synopsis Submitted"),
                            ("SYNOPSIS_APPROVED", "Synopsis Approved by Guide"),
                            ("ADMIN_NOTIFIED", "Admin Notified"),
                            ("EVALUATORS_ASSIGNED", "Evaluators Pool Assigned"),
                            ("EVALUATOR_SELECTION", "Evaluator Selection in Progress"),
                            ("EVALUATOR_CONFIRMED", "Evaluator Confirmed"),
                            ("PROJECT_DEVELOPMENT", "Project Development Phase"),
                            ("PROJECT_SUBMITTED", "Project Submitted"),
                            ("UNDER_EVALUATION", "Under Evaluation"),
                            ("EVALUATION_COMPLETED", "Evaluation Completed"),
                            ("VIVA_READY", "Ready for Viva"),
                            ("VIVA_SCHEDULED", "Viva Scheduled"),
                            ("VIVA_COMPLETED", "Viva Completed"),
                            ("PAYMENT_PENDING", "Payment to Evaluator Pending"),
                            ("COMPLETED", "Project Completed"),
                        ],
                        default="SYNOPSIS_SUBMITTED",
                        max_length=30,
                    ),
                ),
                ("evaluation_feedback", models.TextField(blank=True)),
                (
                    "evaluation_completed_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("viva_date", models.DateTimeField(blank=True, null=True)),
                ("viva_venue", models.CharField(blank=True, max_length=200)),
                ("viva_result", models.CharField(blank=True, max_length=100)),
                (
                    "f_evaluator_payment_amount",
                    models.DecimalField(decimal_places=2, default=150, max_digits=10),
                ),
                (
                    "f_payment_completed_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("f_payment_reference", models.CharField(blank=True, max_length=100)),
                (
                    "i_evaluator_payment_amount",
                    models.DecimalField(decimal_places=2, default=900, max_digits=10),
                ),
                (
                    "i_payment_completed_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("i_payment_reference", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_foreign_evaluator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="foreign_evaluator",
                        to="users.evaluator",
                    ),
                ),
                (
                    "assigned_indian_evaluator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="indian_evaluator",
                        to="users.evaluator",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.phdstudent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("previous_status", models.CharField(blank=True, max_length=30)),
                ("new_status", models.CharField(max_length=30)),
                ("change_reason", models.TextField(blank=True)),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Project status histories",
                "ordering": ["-changed_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[("SYNOPSIS", "Synopsis"), ("PROJECT", "Project")],
                        max_length=20,
                    ),
                ),
                (
                    "file_id",
                    models.CharField(help_text="Google Drive file ID", max_length=200),
                ),
                ("raw_payload", models.JSONField()),
                ("guide_approval_date", models.DateTimeField(blank=True, null=True)),
                ("processed", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectEvaluatorPool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateTimeField(auto_now_add=True)),
                (
                    "priority_order",
                    models.IntegerField(help_text="1-5 for each type (foreign/indian)"),
                ),
                (
                    "evaluator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.evaluator",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluator_pool",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["evaluator__evaluator_type", "priority_order"],
                "unique_together": {("project", "evaluator")},
            },
        ),
    ]
